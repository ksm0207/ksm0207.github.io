<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://ksm0207.github.io/</id><title>공부하고 기록하고</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-09-11T22:35:20+09:00</updated> <author> <name>Kim sung min</name> <uri>https://ksm0207.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://ksm0207.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://ksm0207.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Kim sung min </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Script를 효율적으로 선언하는방법 - async &amp; defer</title><link href="https://ksm0207.github.io/posts/javascript01/" rel="alternate" type="text/html" title="Script를 효율적으로 선언하는방법 - async &amp; defer" /><published>2021-09-11T06:00:00+09:00</published> <updated>2021-09-11T22:34:54+09:00</updated> <id>https://ksm0207.github.io/posts/javascript01/</id> <content src="https://ksm0207.github.io/posts/javascript01/" /> <author> <name>Kim</name> </author> <category term="JavaScript" /> <summary> script를 효율적으로 선언하는방법 2가지 async 와 defer 다음과같이 head영역안에 script를 포함했을때 어떤 순서대로 사용자에게 페이지가 보여질까? &amp;lt;head&amp;gt; &amp;lt;meta charset="UTF-8"&amp;gt; &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt; &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;script src="main.js"&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; 브라우저가 h... </summary> </entry> <entry><title>Mybatis 개념잡기 (1)</title><link href="https://ksm0207.github.io/posts/xml/" rel="alternate" type="text/html" title="Mybatis 개념잡기 (1)" /><published>2021-08-30T06:00:00+09:00</published> <updated>2021-08-30T06:00:00+09:00</updated> <id>https://ksm0207.github.io/posts/xml/</id> <content src="https://ksm0207.github.io/posts/xml/" /> <author> <name>Kim</name> </author> <category term="Java" /> <summary> Entity , DTO 와 VO Mybatis 와 XML 등 먼저 DTO 와 VO 가 무엇을 의미하는지 알아보도록 하겠습니다 Entity : 실제 존재하는 데이터베이스의 테이블과 1:1로 매핑되는 클래스 Entity의 개념은 실제로 존재하는 데이터베이스와 그 안에 존재하는 테이블내에 컬럼과 1:1로 매핑을 할 수 있습니다 사용조건은 테이블내에 존재하는 컬럼만을 속성으로 가져야하고 클래스는 존재하지 않는 컬럼명을 가져서는 안됩니다 DTO ( Data Transfer Object ) DTO는 데이터 전송하는 객체라는 의미를 가집니다 VO와 동일하게 데이터를 저장하여 사용하도록 하는 부분에서 필요로 하며 이들의 차이는 같은 시스템에서 사용되는 것이 아닌 다른 시스템으로 전달하는 ... </summary> </entry> <entry><title>Socket 소켓 통신 및 네트워크 개념</title><link href="https://ksm0207.github.io/posts/Socket/" rel="alternate" type="text/html" title="Socket 소켓 통신 및 네트워크 개념" /><published>2021-08-25T06:00:00+09:00</published> <updated>2021-09-03T03:50:32+09:00</updated> <id>https://ksm0207.github.io/posts/Socket/</id> <content src="https://ksm0207.github.io/posts/Socket/" /> <author> <name>Kim</name> </author> <category term="Java" /> <summary> 네트워크 네트워크의 정의는 A디바이스 B디바이스가 각각 존재한다고 가정할 때 서로 연결되어서 데이터를 주고받고 옮겨가는 이 자체를 네트워크라고 볼 수 있습니다 즉 서로 다른 디바이스 2개가 연결되어 있는 자체를 네트워크라고 부르며 각각 Host라고 명시해줄 수 있고 만약 호스트명 이라고 할때 디바이스의 이름을 기억해둘 수 있겠습니다. IP 와 Protocol 컴퓨터를 사용하다가보면 IP 라는 단어를 한번쯤 들어보거나 실제 무엇을 의미하는지 알고있습니다 그러면 Protocol 은 무엇을 의미하는 것 일까요? 흔히 Protocol 이라고 하면 통신의 전송규약 및 통신규약 이라고 하는데 이것을 다른 예로 들어보면 A 라는 사람은 대한민국 사람이며 잘 나가는 사업가 입니다 다음 B라는 프랑스 사람이... </summary> </entry> <entry><title>Java - I/O 파일 입출력 및 객체 직렬화</title><link href="https://ksm0207.github.io/posts/IOstream/" rel="alternate" type="text/html" title="Java - I/O 파일 입출력 및 객체 직렬화" /><published>2021-08-20T06:00:00+09:00</published> <updated>2021-09-03T03:50:32+09:00</updated> <id>https://ksm0207.github.io/posts/IOstream/</id> <content src="https://ksm0207.github.io/posts/IOstream/" /> <author> <name>Kim</name> </author> <category term="Java" /> <summary> I/O Stream 자바 데이터는 Stream 을 통해 입출력을 진행이 됩니다 Stream은 단일방향으로 연속적으로 흘러가는 것을 말합니다 예를들어 우리 일상생활 속에서도 샤워기가 있습니다 수도꼭지를 틀면 물이 일정한 방향으로 나오고 반대로 수도꼭지를 닫으면 물이 더이상 나오지 않게 되는것 과 같습니다 이때 수도꼭지를 틀었을 때는 Input 이라고 생각할 수 있고 물이 나오는 것은 Output 이다 라고 정리해볼 수 있습니다. 다른 예로 물이 높은곳에서 낮은곳으로 흘러가는 어떤 폭포수가 있는데 물은 계속 일정한 방향으로 흘러가면서 최종적인 도착지로 흘러가는 개념입니다. 프로그램이 출발지 인지 혹은 도착지인지에 따라서 Stream의 종류가 결정되는데 데이터를 입력받을 때에는 InputStr... </summary> </entry> <entry><title>Java - Thread 와 구현방법 개념잡기.</title><link href="https://ksm0207.github.io/posts/thread/" rel="alternate" type="text/html" title="Java - Thread 와 구현방법 개념잡기." /><published>2021-08-11T06:00:00+09:00</published> <updated>2021-08-11T06:00:00+09:00</updated> <id>https://ksm0207.github.io/posts/thread/</id> <content src="https://ksm0207.github.io/posts/thread/" /> <author> <name>Kim</name> </author> <category term="Java" /> <summary> Thread 자바 프로그램을 실행하면 작성한 코드가 위에서부터 아래로 순차적으로 실행하는데 이것을 인터프리터 흐름 방식이며 하나의 스레드라고 표현할 수 있습니다 즉 자바를 실행하면 하나의 스레드가 실행되었다 라고 표현될 수 있겠습니다. Thread 구현 첫번째 방법은 자식클래스에서 Thread 클래스를 상속받아 구현하기. 스레드를 구현하기 위해서는 자식 클래스에서 Thread 클래스를 상속받은다음 run() 메소드를 재정의 후 사용하는 방법이 있습니다. 그런다음 클래스를 실행하기 위해 객체를 생성 후 start() 메소드를 호출해줍니다. package Thread.blog; public class ThreadTest extends Thread{ @Override publ... </summary> </entry> </feed>
