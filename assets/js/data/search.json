[ { "title": "Script를 효율적으로 선언하는방법 - async &amp; defer", "url": "/posts/javascript01/", "categories": "JavaScript", "tags": "JavaScript", "date": "2021-09-11 06:00:00 +0900", "snippet": "script를 효율적으로 선언하는방법 2가지 async 와 defer다음과같이 head영역안에 script를 포함했을때 어떤 순서대로 사용자에게 페이지가 보여질까?&amp;lt;head&amp;gt; &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt; &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&amp;gt; &amp;lt;meta name=&quot;viewport&quot; co..." }, { "title": "Mybatis 개념잡기 (1)", "url": "/posts/xml/", "categories": "Java", "tags": "Java", "date": "2021-08-30 06:00:00 +0900", "snippet": "Entity , DTO 와 VOMybatis 와 XML 등 먼저 DTO 와 VO 가 무엇을 의미하는지 알아보도록 하겠습니다 Entity : 실제 존재하는 데이터베이스의 테이블과 1:1로 매핑되는 클래스Entity의 개념은 실제로 존재하는 데이터베이스와 그 안에 존재하는 테이블내에 컬럼과1:1로 매핑을 할 수 있습니다 사용조건은 테이블내에 존재하는 컬럼만을 속성으로 가져야하고클래스는 존재하지 않는 컬럼명을 가져서는 안됩니다 DTO ( Data Transfer Object )DTO는 데이터 전송하는 객체라는 의미를 가집..." }, { "title": "Socket 소켓 통신 및 네트워크 개념", "url": "/posts/Socket/", "categories": "Java", "tags": "Java", "date": "2021-08-25 06:00:00 +0900", "snippet": "네트워크네트워크의 정의는 A디바이스 B디바이스가 각각 존재한다고 가정할 때 서로 연결되어서데이터를 주고받고 옮겨가는 이 자체를 네트워크라고 볼 수 있습니다즉 서로 다른 디바이스 2개가 연결되어 있는 자체를 네트워크라고 부르며 각각 Host라고명시해줄 수 있고 만약 호스트명 이라고 할때 디바이스의 이름을 기억해둘 수 있겠습니다.IP 와 Protocol컴퓨터를 사용하다가보면 IP 라는 단어를 한번쯤 들어보거나 실제 무엇을 의미하는지알고있습니다 그러면 Protocol 은 무엇을 의미하는 것 일까요?흔히 Protocol 이라고 하면 ..." }, { "title": "Java - I/O 파일 입출력 및 객체 직렬화", "url": "/posts/IOstream/", "categories": "Java", "tags": "Java", "date": "2021-08-20 06:00:00 +0900", "snippet": "I/O Stream자바 데이터는 Stream 을 통해 입출력을 진행이 됩니다 Stream은 단일방향으로연속적으로 흘러가는 것을 말합니다 예를들어 우리 일상생활 속에서도샤워기가 있습니다 수도꼭지를 틀면 물이 일정한 방향으로 나오고 반대로수도꼭지를 닫으면 물이 더이상 나오지 않게 되는것 과 같습니다 이때 수도꼭지를 틀었을 때는 Input 이라고 생각할 수 있고 물이 나오는 것은 Output 이다라고 정리해볼 수 있습니다. 다른 예로 물이 높은곳에서 낮은곳으로 흘러가는 어떤 폭포수가 있는데물은 계속 일정한 방향으로 흘러가면서 최종적..." }, { "title": "Java - Thread 와 구현방법 개념잡기.", "url": "/posts/thread/", "categories": "Java", "tags": "Java", "date": "2021-08-11 06:00:00 +0900", "snippet": "Thread자바 프로그램을 실행하면 작성한 코드가 위에서부터 아래로 순차적으로실행하는데 이것을 인터프리터 흐름 방식이며 하나의 스레드라고 표현할 수 있습니다즉 자바를 실행하면 하나의 스레드가 실행되었다 라고 표현될 수 있겠습니다.Thread 구현 첫번째 방법은 자식클래스에서 Thread 클래스를 상속받아 구현하기.스레드를 구현하기 위해서는 자식 클래스에서 Thread 클래스를 상속받은다음run() 메소드를 재정의 후 사용하는 방법이 있습니다.그런다음 클래스를 실행하기 위해 객체를 생성 후 start() 메소드를 호출해줍니다...." }, { "title": "String 문자열 공백 값과 비어있는 값 체크하기.", "url": "/posts/empty/", "categories": "Java", "tags": "Java", "date": "2021-08-11 06:00:00 +0900", "snippet": "isEmpty입력받은 문자열이 null 값인지 (비어있는) 체크하는 예제를 소개합니다사용한 메소드는 isEmpty() 메소드를 사용하였습니다 isEmpty() : 길이가 0이면 true를 반환하거나 그렇지 않으면 false를 반환한다.※ 위 메소드는 String 클래스에서 포함하고 있는 메소드 인것을 확인하였음.package StringStudy;import java.util.Scanner;public class StringEmpty { public static void main(String[] args) { /* isE..." }, { "title": "자바기반의 응용SW개발자 양성과정 22일차 - Static , 상수 , 추상화", "url": "/posts/increpasDay22/", "categories": "Increpas", "tags": "Increpas", "date": "2021-08-05 06:00:00 +0900", "snippet": "오전수업Static에 대해서 알아보자 기본적으로 클래스의 변수들은 인스턴스 변수 , 인스턴스 메소드 등이 있다 인스턴스 변수 : 클래스의 멤버변수와 같은 의미를 가지고 있다String str = &quot;대한민국&quot;;int a 인스턴스 메소드 : 클래스의 멤버메소드와 같은 의미를 가지고 있다public print() { System.out.println(&quot;String str : &quot; + str); System.out.println(&quot;int a : &quot; + a); }변수 왼..." }, { "title": "상속 파헤치기", "url": "/posts/extends/", "categories": "Java", "tags": "Java", "date": "2021-08-04 01:00:00 +0900", "snippet": "상속자바에서 상속개념을 알아보자. 먼저 상속 관계는 2가지를 나타내는 것이 있다 has a 관계 : 특정 객체 내에서 다른 객체를 가지고 있는것을 의미한다 is a 관계 : 특정 객체가 다른 객체에서 자신의 능력을 포함시켜주는 상속관계 자바 클래스의 상속은 단일 상속을 지원하며 다중 상속은 지원하지 않는다 상속관계의 용어를 알아보자.상속 관계의 용어 Base Class - 기본 클래스 Super Class - 슈퍼 클래스 Parent Class - 부모 클래스 ..." }, { "title": "자바기반의 응용SW개발자 양성과정 20일차 - 상속 + 메모리구조", "url": "/posts/increpasDay20/", "categories": "Increpas", "tags": "Increpas", "date": "2021-08-03 06:00:00 +0900", "snippet": "상속 개념 배우기준비한 클래스 Child - 자식 클래스package am;public class Child extends Parent { public Child() { System.out.println(&quot;Child Class &quot;); } } Parent - 부모 클래스package am;public class Parent { String value; public Parent() { System.out.println(&quot;Parent Class &quot;); } public String g..." }, { "title": "Set 컬렉션 - HashSet 과 TreeSet", "url": "/posts/Set/", "categories": "Java", "tags": "Java", "date": "2021-08-03 01:00:00 +0900", "snippet": "HashSetHashSet 은 Set 컬렉션 클래스에서 많이 사용되는 것 중 하나이고 이 클래스의 특징은해시 알고리즘을 사용하여 검색속도가 매우 빠르다는 점이 있다고 한다HashSet 클래스는 내부적으로 HashMap 과 같은 인스턴스를 이용하여 요소를 저장하는데순서에 상관없이 저장하며 중복된 값은 허용하지 않으며 저장하지 않는다예제 (1) 제네릭 타입은 String 을 사용한다 중복값이 존재할때 어떻게 저장되는지 확인한다package CollectionFramework;import java.util.HashSet;impo..." }, { "title": "List 컬렉션 - ArrayList + LinkedList + Vactor", "url": "/posts/List/", "categories": "Java", "tags": "Java", "date": "2021-08-03 01:00:00 +0900", "snippet": "ArrayListArrayList 는 List 인터페이스를 상속받은 클래스로 크기가 가변적으로 변형하는선형리스트를 의미한다 일반적인 배열과 같은 순차리스트를 가지고 있으며Index로 내부의 객체를 관리한다는 점이 유사하지만 한번 생성되면크기가 절대 변하지 않는 배열과는 다르게 자동으로 부족한 크기만큼용량이 늘어나거나 줄어드는 특징을 가지고 있다List 인터페이스는 중복을 허용하고 저장순서가 유지되는 컬렉션을 구현하는데 사용한다ArrayList 선언 및 사용법ArrayList&amp;lt;객체자료형&amp;gt; list = n..." }, { "title": "Java 제네릭 개념 이해하기", "url": "/posts/Generic/", "categories": "Java", "tags": "Java", "date": "2021-08-03 01:00:00 +0900", "snippet": "제네릭출처 : 자바 제네릭 이해하기제네릭은 JDK 1.5에 처음 도입되었다 제네릭은 클래스 내부에서 사용할 데이터 타입을 외부에서 지정하는 기법을 의미한다※ by 생활코딩 다양한 타입의 객체들을 다룰 수 있는 메소드나 컬렉션 클래스에 컴파일 할때 타입체크하는기능을 의미한다 ※ by 자바의 정석제네릭은 타입에 대한 정보를 동적으로 데이터를 넘겨줄 수 있고 런타임시에 발생할 수 있는오류를 JVM 으로부터 발견할 수 있도록 하는 것 같다자바에서 자주 사용하게 되는 ArrayList를 아주 간단하고 제네릭을 사..." }, { "title": "자바 컬렉션 프레임워크 - Collection Framework (List Set Map)", "url": "/posts/CollectionFramework/", "categories": "Java", "tags": "Java", "date": "2021-08-03 01:00:00 +0900", "snippet": "컬렉션 프레임워크참고자료 : 코딩팩토리 Steady※ Collection : 수집품 , 소장품※ Framework : 어떠한 구현을 재사용 가능하도록 협업화된 형태로 클래스를 제공한다 클래스 + 인터페이스 의 집합자바에서 컬렉션 프레임워크는 다수의 데이터를 쉽고 효과적으로 처리할 수 있는표준화된 방법을 제공하는 클래스의 집합을 의미한다데이터를 저장하는 자료구조 와 데이터를 처리하는 알고리즘을 구조화하여 클래스로구현해놓은 것을 의미하고 컬렉션 프레임워크는 인터페이스를 사용하여 구현된다이들..." }, { "title": "Map", "url": "/posts/Map/", "categories": "", "tags": "", "date": "2021-08-02 00:00:00 +0900", "snippet": "" }, { "title": "자바기반의 응용SW개발자 양성과정 18일차", "url": "/posts/increpasDay18/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-30 06:00:00 +0900", "snippet": "오전시간 클래스 : 객체를 정의하는 설계도면 객체 : Heap 영역에 가르키는 주소값 참조변수 : 객체를 참조하는 변수를 의미함has_a 관계다음주 : 상속 추상화 인터페이스다음은 학생관리 프로그램을 만든다 StudentVO - 아이템만들기package am;public class StudentVO{ String number; // 학번 String name; // 이름 MajorVO mvo; public String getNumber() { return number; } public void set..." }, { "title": "자바기반의 응용SW개발자 양성과정 17일차 - 클래스 연습 + 자판기 프로그램2", "url": "/posts/increpasDay17/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-29 06:00:00 +0900", "snippet": "이번시간에도 클래스 개념과 객체지향 프로그램을 만들어보는 예제로꽃 자판기를 만들어봤는데 객체지향 프로그램이 무엇인지 흐름을 알게해주는 시간이었다꽃 자판기 Flower 클래스package am;public class Flower { String name; String create_date; int price; public String getName() { return name; } public void setName(String name) { this.name = name; } public String getCreate_..." }, { "title": "자바기반의 응용SW개발자 양성과정 16일차 - 클래스 연습 + 자판기 프로그램", "url": "/posts/increpasDay16/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-28 06:00:00 +0900", "snippet": "오전시간오늘도 이어서 클래스 개념을 배워보도록 하자집을 만드는 클래스 (1) Ex1_Housepackage am;public class Ex1_House { int floor; // (방의) 바닥 int room ; // 방 개수 int balcony; // 발코니 int restroom; // 화장실 String direction; // 방향 public int getFloor() { return floor; } public void setFloor(int floor) { this.floor = floo..." }, { "title": "자바 - 가위바위보 게임", "url": "/posts/RPS/", "categories": "Java", "tags": "Java", "date": "2021-07-28 04:00:00 +0900", "snippet": "가위바위보 게임 만들기새벽 4시에 잠도 안오고 놀면 뭐하나 싶어서 자바로 가위바위보프로그램을 만들어보았습니다프로그램 특징 게임 횟수는 1 ~ 20 회 라운드 승리 + 패배 + 무승부 등등 카운트 예외적인 입력 시 해당 라운드 무효 카운트 컴퓨터 승리 카운트 라운드 종료시 승률 계산 코드package personal_project3;import java.util.Scanner;public class RPS { public static void main(String[] ..." }, { "title": "getter &amp; setter 정리", "url": "/posts/getter_setter/", "categories": "Java", "tags": "Java", "date": "2021-07-27 06:05:00 +0900", "snippet": "getter &amp;amp; setter클래스의 특성중 정보 은닉을 가장 잘 보여줄 수 있는 메소드를 의미합니다보통 클래스의 멤버변수는 private로 접근제한자를 설정합니다private 제한자 특성상 자신 클래스 안에서만 사용하고 외부클래스에서는 허용되지 않지만getter / setter 를 통해 멤버변수 의 값을 변경 후 호출 하게 할 수 있습니다 PersonInfo 클래스package personal_study;public class PersonInfo { // 멤버변수 선언 private 제한자로 //..." }, { "title": "자바기반의 응용SW개발자 양성과정 15일차 - 클래스연습 + Call by value &amp; reference", "url": "/posts/increpasDay15/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-27 06:00:00 +0900", "snippet": "오전시간클래스 안에는 어떤 내용을 지을 수 있을까? 멤버변수 멤버메소드public String test(int n){ String str = null ; return str;} 인자 n 과 str 변수는 현재 메소드안에서 정의된 변수이다(지역변수를 뜻함)※ 지역변수는 메소드 안에서만 사용되는 변수이며 사용즉시 소멸된다 return : 메소드 안에서 만들어진 지역변수는 실행 시 소멸되는 특징이 있다 하지만 지역변수를 다른쪽에서 사용하도록 하고싶을 때 반환한다 메소드를 활용해서 ..." }, { "title": "서브쿼리 연습하기 (문제풀이)", "url": "/posts/subQuery/", "categories": "Oracle, SQL", "tags": "Oracle, SQL", "date": "2021-07-23 04:40:00 +0900", "snippet": "문제 1 EMPLOYEES 테이블에서 Kochhar의 급여보다 많은 사원의 정보를 사원번호,이름,담당업무,급여를 출력하라.select employee_id , first_name , job_id , salaryfrom employeeswhere salary &amp;gt; ( select salary from employees where last_name = &#39;Kochhar&#39; );문제 2 EMPLOYEES 테이블에서 급여의 평균보다 적은 사원의 사원번호,이름,담당업무,급여,부서번호를 출력하여라.SELECT e..." }, { "title": "String 클래스 + 불변성특징", "url": "/posts/String/", "categories": "Java", "tags": "Java", "date": "2021-07-22 12:40:00 +0900", "snippet": "String 클래스 와 불변성 특징 String 클래스를 알아가보며 메모리 구조는 어떻게 되는지 알아보자. String 클래스는 불변성 특징을 가지고 있다 왜 그런걸까? String 클래스를 알아보자자바에서는 문자열을 String 클래스를 이용해서 참조 레퍼런스에 값을 저장할 수 있습니다변수에 문자열을 저장하려면 &quot; &quot; 로 감싼 다음 문자열을 대입하면 됩니다String name = &quot;Kim&quot;;위 코드는 문자열이 직접 변수에 저장하는 것은 아니며 String 객체로 생성..." }, { "title": "자바기반의 응용SW개발자 양성과정 12일차 - 배열 , String 클래스 , StringBuffer , Calendar", "url": "/posts/increpasDay12/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-22 06:00:00 +0900", "snippet": "오전시간배열의 난수값을 넣고 중복값 제거하기.1 ~ 9 난수를 발생해야 한다 I 번째보다 앞에있는 모든 요소 들의 값을 비교한다비교시 같은 값이 있다면 난수를 다시 발생하여 I번째에 대입한다 난수를 받는 for 문 하나 비교를 하는 for 문 둘직접 구현해봤던 코드package personal_study;public class Ex7_Array { public static void main(String[] args) { // 도전문제 // 정수 3개를 저장할 수 있는 배열을 만든다 // 1 ~ 9 까지의 값들 중..." }, { "title": "자바기반의 응용SW개발자 양성과정 11일차 - String 과 배열", "url": "/posts/increpasDay11/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-20 06:00:00 +0900", "snippet": "오전시간 String 클래스의 암시적 객체 생성 명시적 객체 생성 Heap 영역에 어떻게 들어갈까? 내용비교 해보기String 암시적 명시적 생성String s1 = &quot;Test&quot;; // 초기화 작업 // 암시적 객체생성 // String 객체게만 주어지는 객체 생성법String s2 = new String(&quot;Test&quot;); // 명시적 객체생성 ..." }, { "title": "자바기반의 응용SW개발자 양성과정 10일차 - 제어문 마무리", "url": "/posts/increpasDay10/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-20 06:00:00 +0900", "snippet": "오전시간별찍기package increpas_example0719;public class Ex8_MultiFor { public static void main(String[] args) { // 별찍기 (숙제) // * // * * // * * * // * * * * // * * * * * for (int i = 0 ; i &amp;lt; 5 ; i ++) { for (int j = 0 ; j &amp;lt;= i; j ++) { System.out.print(&quot;* &quot;); }/..." }, { "title": "클래스 정리", "url": "/posts/classFinal/", "categories": "Java", "tags": "Java", "date": "2021-07-19 23:25:00 +0900", "snippet": "클래스와 객체클래스의 기초적인 개념을 다시 한번 더 공부해보았는데 클래스를 설명할때 가장 적절한건 바로건물을 지을때 필요한 설계도면이 가장 베스트 이지 않을까 싶었다개발자를 목수 라고 비유해보면 설계도면의 바탕이 되는 디자인을 보고 건물을 짓는데이때 완성된 건물을 보고 객체 라고 하는게 맞는 것 같다스타크래프트 - 배럭위 사진은 미네랄 150이면 기초건물을 지을 수 있는 배럭이다 내가 만약 현실 SCV가 되어서 배럭을 짓는다고 생각해보면 어떨까?배럭의 설계도면을 건네준 어떤 사람이 나한테 배럭을 지어달라고 요청하면 나는 이거대..." }, { "title": "지역변수 전역변수 차이 + Static 변수", "url": "/posts/local&global/", "categories": "Java", "tags": "Java", "date": "2021-07-19 23:20:00 +0900", "snippet": "지역변수 로컬변수자바에서 변수는 선언 위치에 따라 지역변수 와 전역변수로 나눠집니다 지역변수 : 중괄호 안에 생성되고 이 안에서만 사용할 수 있는 변수는 지역변수 입니다 메소드를 구현할 때 생성합니다 전역변수 : 말 그대로 전체 어디에서든 호출하면 사용가능한 변수 입니다 예시package personal_study;public class Variables { // 전역변수 int globalInteger; String globalString; double globalDouble;..." }, { "title": "자바기반의 응용SW개발자 양성과정 9일차 - 제어문 (2)", "url": "/posts/increpasDay9/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-19 06:00:00 +0900", "snippet": "오전시간 나이를 체크하는 프로그램 : 10대 ~ 40대까지 그 외의 나이가 입력되면 “ 나이 범위를 벗어났습니다 “ 라는 문장 출력 예 ) 입력 : 40 출력 : 40대시군요!코드작성package pm;import java.util.Scanner;public class AgeCheck { public String check(int age) { String res = &quot;&quot;; if (age &amp;gt;= 10 &amp;amp;&amp;amp; age &amp;lt;= 19) { res = &q..." }, { "title": "String [] args 의미 / CharAt()", "url": "/posts/args/", "categories": "Java", "tags": "Java", "date": "2021-07-18 23:40:00 +0900", "snippet": "Public Static void main (String [] args)자바를 학습하다보면 클래스를 생성하여 메인메서드를 꼭 만들게 되는데프로그램의 시작이라고 알고있지만 괄호안에 들어가는 String [] args 는무엇을 의미하는 것 일까요? public : 접근제어자를 나타내고 외부에서 접근할 수 있는 일종의 제약 같은 것 입니다 어느곳에서든 해당 객체를 참조할수있게 됩니다 static : 이 메서드는 정적 메서드 입니다 라는 의미를 부여할 수 있습니다 static 으로 메..." }, { "title": "자바 객체 주소값 확인", "url": "/posts/obrAddress/", "categories": "Java", "tags": "Java", "date": "2021-07-18 22:30:00 +0900", "snippet": "객체 주소객체 출력값을 레퍼런스변수만 사용하여 확인했던 적이 많았는데 눈으로 확인하면항상 알수없는 문자로 나타나 이게 뭔가 싶었는데 특히 @ 뒤에 나오는 문자가무엇을 의미하는지 궁금하여 구현을 해 보았습니다 사용한 클래스 : Address 목표 : 레퍼런스변수을 출력하여 @ 뒤에 나오는 문자 의미 찾기package personal_study;public class Address { String res = &quot;&quot;; public Address(String res) { this.res = res; } pub..." }, { "title": "자바 메모리(Static Stack Heap) 구조 정리", "url": "/posts/memory/", "categories": "Java", "tags": "Java", "date": "2021-07-16 09:20:00 +0900", "snippet": "시작하기전 참고사이트 1 : 자바 메모리 에 대한 정리 참고사이트 2 : 메모리 구조(Static stack heap) 참고사이트 3 : 자바 메모리 구조와 예 참고사이트 4 : 자바 Stack 클래스 사용법 &amp;amp; 예제 총정리 참고사이트 5 : 자바 메모리 관리 - 스택 &amp;amp; 힙 참고교재 : 자바 프로그래밍 바이블 - 오경주 , 염기호 , 정용훈 님 지음선배 개발자님들 에게 감사합니다 !!메모리 구조 및 특징에 대해서 알아보자프로그램을 구동하기 위해서 운영체제가 메모리(RAM)에 데이터나 명..." }, { "title": "자바기반의 응용SW개발자 양성과정 8일차 - 연산자 마무리 , 제어문", "url": "/posts/increpasDay8/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-16 09:19:00 +0900", "snippet": "0716자바 클래스명이 한글로 되어있을때 , 리눅스에 올릴려면 문제가 생김.※ 문제점 : 알아보기.콘솔창 단축키 : alt + shift + Q 눌러서 (Console) 찾기창이 사라질땐 되도록 Window 메뉴를 선택하거나 구글링을 잘하자.오전시간대입연산자 ※ a = b : 변수 b의 값을 변수 a에 저장하면 a의 값은 소멸된다int a = 12;int b = 5; a = b;System.out.println(a); // 5 ※ a +=b : b가 가지고 있는 값을 a에 연산 후 저장 됩니다int a = 12;int b..." }, { "title": "기본자료형 객체자료형 차이", "url": "/posts/arrangement/", "categories": "Java", "tags": "Java", "date": "2021-07-16 06:18:00 +0900", "snippet": "자료형 개념Java 자료형을 제대로 정리해놓은 것이 없어 명확하게 정리해보고자 합니다자료형 이란 변수를 선언할 떄 변수명 앞에 적어주는 키워드 즉 예약어를사용하는데 A 라는 변수가 어떤 형태의 데이터 타입 이 될 것인지우리는 컴퓨터에게 알려주는 역할을 해야합니다 그럼 이제 자료형을 정리해봅시다1. 기본 자료형 이랑 객체 자료형 ? 무슨 차이가 날까?기본자료형 : 자바에서 이미 존재하고 있는 데이터 타입을 뜻합니다 분류로는 총 4가지가 있습니다정수형 byte - 1byte 4bit short - 2byte 16bit in..." }, { "title": "자바기반의 응용SW개발자 양성과정 7일차 - 자바", "url": "/posts/increpasDay7/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-15 09:19:00 +0900", "snippet": "ERD 유저들의 아이템 구매현황 파악하기.※ 연습필요문제) 특정 게임 유저들의 아이템 구매현황을 파악하고자 한다.아이템 종류는 티셔츠 모자 바지 안경 등유저가 언제 어떤 어이템을 구매했는지를 알 수 있어야 한다 유저정보 : ID , name , email , phone 아이템정보 { name , price , 상태 0 이면 판매중 , 1이면 중지 history_fk} 카테고리 정보 ,history pk , history_name(설명) 구매(판매)현황 : pk , 아이템 고유번호(fk) , ID(fk) ,..." }, { "title": "자바 특징 정리하기", "url": "/posts/java/", "categories": "Java", "tags": "Java", "date": "2021-07-14 17:08:00 +0900", "snippet": "자바 특징 정리 1 - 객체지향 프로그래밍객체지향 이라는 말을 정리하기전에 먼저 객체지향 가 뭔지 알아보고자 합니다 객체 - (Object)눈으로보고 만질 수 있는 모든 것을 객체라고 생각하면 되겠습니다 예를들어 집을 짓는목수 가 있습니다 나무로 만든 집을 만들어달라고 업체에게 요청을 받아 목수는 자기 일을 열심히하는데 여기서 목수가 필요한건 무엇이고 , 사용해야 할 도구는 무엇일까요? 목수 해야할 일 : 집 짓기 재료 : 나무 사용도구 : 톱 , 못 등등..목수가 요청된 일을 시작하여 나무를 자르기 위해 톱 을 가지..." }, { "title": "자바기반의 응용SW개발자 양성과정 6일차 - ERD", "url": "/posts/increpasDay6/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-13 09:19:00 +0900", "snippet": "오늘 수업 내용은 ERD 활용하는 것만 계속해서 ERD 관련된 것을 포스팅 해야겠다.특정 테이블을 따로 분리하는 이유※ 포인트에 관련된 것을 왜 따로 뺐을까?점주한테 의뢰가 들어옴 –&amp;gt; 업체한테 포인트 바꿔달라고함어제 구매한 사람이 포인트가 100원 적립됐다면오늘은 50원으로 바꿔버릴 수 있다고함..제품의 대한 포인트는 따로 빼놓아서 확인할 수 있어야 한다.주 된 목적은 : 나중에 사용자가 이 포인트에 관련해서 조정하고 싶을땐빼 놓는게 좋다ERD 연습 하기" }, { "title": "시퀀스 정리", "url": "/posts/seq/", "categories": "Oracle, SQL", "tags": "Oracle, SQL", "date": "2021-07-13 06:35:00 +0900", "snippet": "시퀀스 (Sequence)자동으로 순차적으로 증가하는 순번을 반환하는 데이터베이스 객체는 시퀀스를 뜻합니다시퀀스는 PRIMARY KEY (PK) 값에 중복값을 방지하기 위해 사용하는데예를들면 사용자가 게시판에 글을 하나 작성하면 PK 값이 생겨야 한다고 해보겠습니다만약 전체 게시판의 글 수는 50번까지 있고 다음 글이 추가 되었을 경우글 번호가 51 이라는 하나의 값을 DB에서 생성해줘야 할 것 입니다그럼 51 이라는 숫자를 얻으려면 기존 글번호 + 1을 해야하는 알고리즘이 필요하지만시퀀스를 사용할 줄 알면 이런 문제는 필요없..." }, { "title": "자바기반의 응용SW개발자 양성과정 5일차 - 데이터베이스 모델링", "url": "/posts/increpasDay5/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-12 10:30:00 +0900", "snippet": "데이터베이스 설계 PK , FK 정리모델링 도구 : ERwin (Tool) 모델링 - 프로그램 요구사항 분석 - 요청자의 의도를 파악하여 분석 후 프로그램 개발 목표 논리적 모델링 - 요구사항에 맞게 테이블이나 테이블 관계들이 논리적 이어야함Column : 속성 물리적 모델링 - 객체속성 , 식별자들을 테이블 , 컬럼 , 키등으로 변환최종 구현 : SQL데이터 모델링 논리적 모델링데이터베이스 구축의 요구분석 단계에 해당되고 Entity(객체 , 테이블 , 시퀀스) 에 필요한컬럼(속성) 들을 정의하고 관계를..." }, { "title": "자바기반의 응용SW개발자 양성과정 4일차 - 테이블 생성 , DML , 계정생성 권한부여", "url": "/posts/increpasDay4/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-12 10:30:00 +0900", "snippet": "테이블 생성 정리 : 그룹함수 , having 절 자세히 공부하기 테이블 생성법 CREATE TABLE 테이블명( 컬럼명 1 자료형, 고유 키 값 PRIMARY KEY 컬럼명 2 자료형, 컬럼명 3 자료형 . . . 키워드 : CONSTRAINT (제약조건명) 제약조건 제약 조건을 명시하는 행위);※ 여기서 제약조건 이란 .. 어떤 특정 컬럼에 값을 정의 할 수도 있고 안 할 수도있다※ EX ) null 지정 , 혹은 무조건 값이 지정되어야만 할 때 등등..다음..." }, { "title": "Oracle DML 연습하기", "url": "/posts/OracleDML/", "categories": "Oracle, SQL", "tags": "Oracle, SQL", "date": "2021-07-09 22:00:00 +0900", "snippet": "DML 종류 와 뜻DML - 데이터 조작어 Insert - 값을 넣을 때 사용 Select - 테이블 조회 Update - 테이블 의 값을 수정 할 때 Delete - 말 그대로 지우기.Insert 방법 &amp;amp; 데이터입력Oracle에서 테이블에 데이터를 입력할 때는 Insert 문을 사용하면 됩니다Insert 문은 SQL의 가장 기본적인 방법이며 , 상황에 따라 다양한 방법으로 사용 할 수 있습니다 Insert 구문 예시 - 기본 사용법INSERT INTO 테이블명 ( 컬럼명 1 , 컬럼명 2, 컬럼명 3,..." }, { "title": "자바기반의 응용SW개발자 양성과정 3일차 - 서브쿼리 / Join", "url": "/posts/increpasDay3/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-09 22:00:00 +0900", "snippet": "서브쿼리[SQL] 서브쿼리(참고사이트)서브쿼리는 SQL 문장 안에 또 다른 SQL 문장이 포함된 것 입니다최종 결과를 출력하는 쿼리를 메인 쿼리 라고 한다면 보조 역할을 하는SELECT문을 서브 쿼리 라고 정의할 수 있을 것 같습니다 하나의 SQL문을 기준으로 메인 쿼리를 제외한 모든 SELECT문은 서브쿼리 서브쿼리는 메인쿼리가 실행되기 이전에 한번만 실행됩니다. 여러 개 사용할 수 있습니다.서브쿼리 의 장점은 한번 읽어온 데이터를 메모리 안에서 가공하여 사용할 수 있도록하는 것 이고 즉 , 동일한 데이터를 다시 한번..." }, { "title": "자바기반의 응용SW개발자 양성과정 2일차 - 인크레파스", "url": "/posts/increpasDay2/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-08 08:42:00 +0900", "snippet": "Day 2 SQL 다양한 함수 , GROUP by , decode() ..SQL 함수는 쿼리문을 통해 얻어온 값을 조작할 수 있습니다 SQL 함수의 특징 (1) 데이터에 대한 연산을 수행 할 수 있습니다. (2) 개별적인 데이터 항목을 수행 할 수 있습니다 (3) 그룹화 작업에도 용이합니다 SQL 함수의 종류 문자 함수 숫자 함수 날짜 함수SQL 문자함수자바에서 사용하는 String 클래스에 다양하게 조작하거나 변경할 수 있는다양한 메소드들도 SQL 에서 접근할 수 있다는 것을 알..." }, { "title": "자바기반의 응용SW개발자 양성과정 1일차 - 인크레파스", "url": "/posts/increpasDay1/", "categories": "Increpas", "tags": "Increpas", "date": "2021-07-07 21:15:00 +0900", "snippet": "Day 1 오라클 XE 교육용 관계형 데이터베이스 (RDBMS)※ RDBMS : Relational DataBase Management System 의 약자로 관계형 모델기반 , DBMS 유형을 뜻한다.관계형 DB 종류는 오라클 , Mysql , MS-SQL , DB2 등이 있고 이런 관계형 DB는1970년 6월 대량 공용 데이터베이스의 관계형 모델 논문이 발표 된 적이있으며크게 관심받아 지금까지 발전 해 왔다고 합니다.관계형 모델의 구성요소 (1) : 데이터를 저장하는 객체 혹은 관계들의 집합. (2) : 다른 관계를 ..." }, { "title": "Java 설치하기 , JDK + 환경변수 테스트", "url": "/posts/startJava/", "categories": "Java", "tags": "Java", "date": "2021-07-06 16:14:00 +0900", "snippet": "컴퓨터 32비트 &amp;amp; 64 비트 확인하기※ 윈도우 기준설치전 컴퓨터 비트 알아보기 : 내 PC --&amp;gt; 오른쪽 마우스 클릭 --&amp;gt; 속성 클릭※ 컴퓨터 비트를 먼저 알아 본 이유는 앞으로 설치 할 JDK버전 호환성 때문에 알아 보았습니다.※ JDK : 자바를 개발 할 수 있는 하나의 키트.Java 설치하기자신의 컴퓨터 비트를 알아냈다면 오라클에 접속 해 줍니다.※ JDK 다운로드 하기 위해선 계정이 필요하므로 꼭 계정 생성을 해주세요 (1) 선택 한 버전은 Java SE 11 (LTS) 이..." }, { "title": "다형성 개념 이해하기", "url": "/posts/Polymorphism/", "categories": "Java", "tags": "Java", "date": "2021-07-01 02:28:00 +0900", "snippet": "" }, { "title": "인터페이스 (Interface) 개념 이해하기", "url": "/posts/Interface/", "categories": "Java", "tags": "Java", "date": "2021-06-23 22:02:00 +0900", "snippet": "인터페이스 , 알아보기전 !다음의 경우를 생각 해 보겠습니다. 나는 동물을 키우는 유튜버 입니다 그리고 채널에 동물 동영상을 등록합니다 육식동물 에게는 다음과 같이 먹이를 줍니다. 치타 에게는 사과를 줍니다 사자 에게는 수박을 줍니다위와 같은 내용으로 코드로 담아 학습하려고 만든 클래스는 다음과 같습니다 Animal 클래스 - 동물(부모) Cheetah 클래스 - 자식 Lion 클래스 - 자식 Youtuber 클래스 - main 실행(1) Animal 클래스public class Animal { S..." }, { "title": "super &amp; super()", "url": "/posts/Super/", "categories": "Java", "tags": "Java", "date": "2021-06-23 21:21:00 +0900", "snippet": "Super자바에서 super 라는 것 이 있습니다 , 먼저 이것은 자식 클래스가 부모 클래스 로 부터 상속받은 멤버를 참조할 때 사용할 수 있는 참조 변수 입니다예를들어 클래스 안의 멤버변수 그리고 지역변수 와 이름이 같아혼란을 방지하려고 this 로 구분지어 줄 수 있었다면 , super 는부모 클래스 , 자식 클래스 의 멤버 이름이 같을 경우 super로 구분지어 줄 수 있습니다this , super 의 공통점 은 인스턴스 주소 값 을 저장합니다.예제 - Super 활용하기예제로 사용한 클래스는 다음과 같습니다. Sup..." }, { "title": "생성자 (Constructor)", "url": "/posts/Constructor/", "categories": "Java", "tags": "Java", "date": "2021-06-21 18:51:00 +0900", "snippet": "생성자 는 무엇일까 ?예제는 다음과 같이 준비하였습니다. Animal 클래스public class Animal { String name; public void setName(String name) { this.name = name; }} Dog 클래스public class Dog extends Animal{ public void sleep() { System.out.print(this.name + &quot; Zzz ... &quot;);} HouseDog 클래스public class HouseDog extend..." }, { "title": "Object 클래스", "url": "/posts/ObjectClass/", "categories": "Java", "tags": "Java", "date": "2021-06-19 15:09:00 +0900", "snippet": "Object모든 클래스의 조상인 Object 클래스에 대해서 알아보겠습니다.도움받은 사이트 : 생활코딩 Object 클래스먼저 자바에서 상속이란 것은 필수적 이라고 합니다 우리가 상속을 하든 안하든기본적인 상속을 하게 된다고 하였는데요예를들어 이런 코드가 있다고 가정해보겠습니다package org.opentutorials.javatutorials.progenitor; class O {}위 코드는 아래 코드와 같습니다package org.opentutorials.javatutorials.progenitor; class O ext..." }, { "title": "상속", "url": "/posts/Extend/", "categories": "Java", "tags": "Java", "date": "2021-06-17 23:02:00 +0900", "snippet": "상속 파헤치기 !!자바의 상속 에 대해서 알아보고자 합니다. 자바에서 상속은 말 그대로자식이 부모로부터 무언가를 물려받는 것 이라고 쉽게 설명 할 수 있습니다.먼저 클래스 파악하기 에서 예제로 사용했던 Animal 클래스에 이어서 학습내용에사용할 수 있다고 판단되어 포스팅을 하고자 합니다Animal 클래스를 상속하는 Dog 클래스준비한 클래스는 Animal 클래스와 Dog 클래스를 준비 해 보았습니다※ Animal 클래스 Dog 클래스 각각 파일을 만들어 줍니다.Animal 클래스 코드는 다음과 같습니다public class ..." }, { "title": "예외처리", "url": "/posts/Exception/", "categories": "Java", "tags": "Java", "date": "2021-06-17 16:42:00 +0900", "snippet": "Exception예외처리는 프로그램이 시작될 때 예기치 못한 상황이 오면예외적인 발생에 적절하게 대응할 수 있는 것 을 말합니다즉 예외처리 는 실행중인 프로그램이 갑작스럽게 비정상적인 종료를 막아주고정상적인 실행상태를 유지할 수 있도록 하는 것 입니다 예시int userAge = scan.nextInt();예를들어 userAge 객체에 정수 이외에 다른 타입의 자료형을 입력하였을때 프로그램은 에러를 발생하면서종료되는게 일반적입니다 하지만 예외처리를 해준다면 프로그램은 종료되지 않고 유지할 수 있게됩니다※ 예외처리를 사용할때 ..." }, { "title": "메소드(Method) 파악하기", "url": "/posts/javaMethod/", "categories": "Java", "tags": "Java", "date": "2021-06-17 13:52:00 +0900", "snippet": "메소드보통 다른언어에는 함수라는 것이 별도로 존재합니다 하지만 자바에서는클래스를 떠나 존재하는 것은 있 을 수 없기 때문에 자바의 함수는 따로 존재하지 않고클래스 내에 존재합니다 따라서 자바는 클래스 내의 함수를 메소드라고 부릅니다.이번 메소드에서는 입출력 위주로 메소드에 대해서 좀 더 자세히 알아 볼 필요가 있습니다메소드를 설명하기 전에 믹서기를 생각해봅시다믹서기믹서기에 과일을 넣는다 → 믹서기를 이용해서 과일을 갈아 주스를 만든다보통 믹서기는 위와 같은 방법으로 작동합니다 이것을 프로그래밍 으로 생각해보면과일을 넣는다 는 ..." }, { "title": "클래스(Class) 파악하기", "url": "/posts/javaClass/", "categories": "Java", "tags": "Java", "date": "2021-06-16 18:35:00 +0900", "snippet": "클래스동물 이라는 클래스는 다음과 같이 만들어 보았습니다.public class Animal {}위 동물 클래스는 클래스의 선언만 있고 내용이 없는 껍데기뿐인 클래스 이지만이 껍데기만 있는 클래스도 중요한 기능을 가지고 있는데그것은 바로 객체를 만드는 기능이있습니다.객체는 어떻게 만드나요 ?new 연산자 를 이용하여 클래스를 로드하는 방식.Animal dog = new Animal ();new 연산자는 객체를 생성할 때 사용하는 키워드 이고 이 연산자를 통해서동물 클래스의 인스턴스인 dog로 통해 Animal 객체를 만들 수 ..." }, { "title": "백준 - 2292번 벌집 (Java)", "url": "/posts/BackJoon07/", "categories": "BaekJoon, Algorithms", "tags": "BaekJoon", "date": "2021-04-11 18:04:00 +0900", "snippet": "문제 : 백준 - 2292번 벌집 Solution 1 (1) 방 개수가 증가하는 것을 보면 6의 배수라는 패턴이 있다.이 문제는 육각형으로 이루어진 벌집에서 N번째 벌집으로 가기위해 몇개의 방을 지나가야만도착하는지 풀어보는 문제 이고 출력할 것은 시작과 끝을 포함한 값 입니다문제 출력에서 13을 입력하고 3번 움직였다고 하려면 먼저 조건식이 필요할 것 같고조건식을 충족할 때 마다 증감되는 반복문을 설계 해야할 것 같습니다시작하는변수 값은 1 이므로 여기에 증감시켜 시작 과 끝을 포함한 값을 출력해라 이거 같은데..하지만 어..." }, { "title": "백준 - 10757번 큰 수 A + B (Java)", "url": "/posts/BackJoon06/", "categories": "BaekJoon, Algorithms", "tags": "BaekJoon", "date": "2021-04-11 17:10:00 +0900", "snippet": "문제 : 백준 - 10757번 큰 수 A + BSolution 1 (1) 큰 정수형을 입력받는다 (2) BigInteger 클래스를 사용한다참고한 사이트 : 클래스 BigInteger이 문제를 풀이할 때 자료형 long 을 사용해서 풀이하면 좋겠다는 생각으로 시도하였지만 입력받는 것 부터에러가 발생하여서 어떻게 하면 좋을지 고민하고 있다가 엄청 큰 정수를 입력받으려면BigInteger 클래스를 활용하는 것이 좋다는 정보글을 알게되었습니다BigIntegerBigInteger 클래스는 변경이 불가능한 , 임의 정밀도의 정수입니..." }, { "title": "백준 - 1712번 손익분기점 (Java)", "url": "/posts/BackJoon05/", "categories": "BaekJoon, Algorithms", "tags": "BaekJoon", "date": "2021-04-10 03:10:00 +0900", "snippet": "문제 : 백준 - 1712번 손익분기점Solution 1 (1) 몇대를 만들고 판매하면 이익이 발생하는지 출력 (2) 손익분기점이 일어나지 않는다면 -1 을 출력이 문제는 고정비용(A) , 가변비용(B) , 측정값(C) 이 들어가는 변수 3개를 만듭니다중요한 것은 고정 비용은 몇 대를 생상하던 절대 변하지 않는 비용 이라는 것인데예를들어 A가 100 이라고 하였을 때 상품을 100개를 생산하든 1000개를 만들던간에A는 게속 100 이라는 것 입니다 문제에서 보면 N개를 생산할 때 이익이 발생하는 지점을 출력합니다좀더 이해..." }, { "title": "백준 - 2869번 달팽이는 올라가고 싶다 (Java)", "url": "/posts/BackJoon04/", "categories": "BaekJoon, Algorithms", "tags": "BaekJoon", "date": "2021-04-10 01:52:00 +0900", "snippet": "문제 : 백준 - 2869번 달팽이는 올라가고 싶다Solution 1 (1) 정상에 올라간 후에는 미끄러지지 않는다 ★ 가장 해결해야 할 문제 (2) 낮에 올라가는 길이와 밤에 내려오는 길이를 빼서 단순히 나누면 안되는 문제 (3) 시간문제 때문에 Scanner 보다 BufferedReader를 사용하여 코드를 최적화 시키기 (4) V 에서 up 과 down 의 차이를 나눈 몫을 구하여 일수를 구하기이 문제에서 나오는 가장 골치아픈 조건은 정상에 올라간 후에는 미끄러지지 않는다 입니다입력데이터 를 2 1 5를 주었을떄 ..." }, { "title": "백준 - 2750번 수 정렬하기 (Java)", "url": "/posts/BackJoon03/", "categories": "BaekJoon, Algorithms", "tags": "BaekJoon", "date": "2021-04-10 01:30:00 +0900", "snippet": "문제 : 백준 - 2750번 수 정렬하기Solution 1 (1) ArrayList 이용하여 수 정렬시키기 (2) 자료구조 HashSet 사용해서 풀어보기처음에 예제 입력 1을 보고 5 5 2 3 4 1 을 정렬시켜야 되는줄 알고 삽질을 하였지만알고보니 5 5 2 3 4 1 을 중복체크 후 정렬 시키는 것이 아니라 첫째 줄의 개수는 5 라는 걸 알고5 2 3 4 1 을 정렬 시키는거구나.. 라고 다시 이해하게 되었습니다그래서 사용하게된건 ArrayList와 HashSet을 사용하여 데이터를 처리 한 다음마무리로 Collec..." }, { "title": "Java 04 - 클래스 , 객체 , 메소드 (5) - 추상화 클래스", "url": "/posts/java26/", "categories": "Java", "tags": "Java", "date": "2021-04-06 17:35:00 +0900", "snippet": "추상화본 포스팅은 Java 04 - 클래스 , 객체 , 메소드 (2) - 객체 지향 프로그래밍의 특징 에 이어서추상화 내용을 확장하고자 하는 포스팅 입니다먼저 추상화 정의는 상세한 정보는 무시하되 필요성에 의해 있어야할 정보들만 간추려서 구성하는 것 입니다그렇다면 어떻게 ? 구성하는지 추상화 클래스를 통해 알아보도록 하겠습니다추상화 클래스우리가 알고있는 클래스는 보통 하나의 프로그램 이라고 이해할 수 있으면서무언가 동작하려는 설계도 같은 존재라고 쉽게 터득할 수 있습니다그렇다면 클래스에 추상화를 입힌다면 추상화 클래스 를 만들..." }, { "title": "백준 - 11720번 숫자의 합 (Java)", "url": "/posts/BackJoon02/", "categories": "BaekJoon, Algorithms", "tags": "BaekJoon", "date": "2021-04-06 16:04:00 +0900", "snippet": "문제 : 백준 - 11720 숫자의 합도움받은 블로그 : st-labSolution 1 (1) charAt() 메소드를 이용하여 풀이하기import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(n..." }, { "title": "백준 - 11654번 아스키 코드 (Java)", "url": "/posts/BackJoon01/", "categories": "BaekJoon, Algorithms", "tags": "BaekJoon", "date": "2021-04-06 14:02:00 +0900", "snippet": "문제 : 백준 - 11654번 아스키 코드도움받은 블로그 : st-labSolution 1 (1) 기초입력스트림 System.in을 이용한다이 문제를 풀이할때 입력은 굳이 Scanner로 하지 않아도 된다는 점을 알았습니다기초입력스트림을 통한 System.in 을 사용하여 입력을 받아보았는데 애초에 System.in은 byte 값으로문자 한 개당 읽으면서 값을 아스키코드 로 반환한다는 사실을 알게 되었죠import java.io.IOException;public class Main { public static void ..." }, { "title": "Java 04 - 클래스 , 객체 , 메소드 (4) - 메소드 오버로딩", "url": "/posts/java25/", "categories": "Java", "tags": "Java", "date": "2021-03-30 10:04:00 +0900", "snippet": "오버로딩자바에서는 원래 한 클래스 내에 같은 이름의 메소드를 둘 이상 가질수 없습니다하지만 매개변수의 개수나 타입을 다르게 한다면 한가지 이름으로 가진 메소드를 여러번 작성할 수 있게됩니다이 방법은 오버로딩 이라는 것 이고 메소드를 호출할 때 전달해야 할 매개변수의 타입이나 개수에 대해 크게 신경을 쓰지않고호출할 수 있게됩니다 정리하면 메소드 오버로딩은 이름이 같은 메소드를 여러 개 정의하는 것 을 말하고사용할때는 메소드가 가지고 있는 매개 변수는 각각 다르게 지어줘야합니다프로그래밍에서 오버로딩은 중복정의 혹은 다중 정의 라는..." }, { "title": "Call by Value || Call by reference", "url": "/posts/java24/", "categories": "Java", "tags": "Java", "date": "2021-03-30 06:42:00 +0900", "snippet": "Java - Call by Value 와 Call by Reference자바에서 Call by Value 와 Call by Reference 개념은 무척 중요하고기존 메소드 포스팅에 내용을 추가하고 기록하고자 합니다참고한 블로그는 다음과 같으며 정리된 내용이 깔끔하여 큰 도움이 되었습니다.Gyun’s 개발일지Call by Value : 값에 의한 호출 (1) 메소드 가 호출될 때 메모리 공간 안에서는 임시 공간이 생성되고 메소드가 종료되면해당 임시 공간은 사라집니다 (2 메소드 호출시 전달되는 변수의 값을 복사하여 메소드 ..." }, { "title": "Java 04 - 클래스 , 객체 , 메소드 (3-2) -메소드 기초 + 객체 생성과 사용 (2) -Method", "url": "/posts/java23/", "categories": "Java", "tags": "Java", "date": "2021-03-28 02:21:00 +0900", "snippet": "메소드메소드는 클래스 안에 정의된 함수 입니다 혹은 멤버 함수 라는 용어가 있고무언가 특정한 작업을 수행하는 문장들의 모임 이라고 볼수있는데제가 생각하는 메소드가 하는 역할을 청소기 와 커피포트로 예를 들어보았습니다청소기 작동 (1) 청소기를 킨다 (2) 청소기의 주입구가 먼지를 빨아들인다 (3) 청소기를 끈다 (4) 바닥이 깨끗해진다커피포트 작동 (1) 버튼을 눌러 물을 끓인다 (2) 물을 팔팔 끓인다 (3) 온도가 적정선 까지 끓여졌다면 작동을 멈춘다 (4) 뜨거운 물을 얻는다이와 같이 공통적으로 상황이 주어..." }, { "title": "Java 04 - 클래스 , 객체 , 메소드 (3-1) -클래스 기초 + 객체 생성과 사용 (1) -Class", "url": "/posts/java22/", "categories": "Java", "tags": "Java", "date": "2021-03-28 02:21:00 +0900", "snippet": "클래스객체 지향 프로그램은 객체 로 구성됩니다 근데 같은 종류의 객체는 하나만 있지는 않습니다자동차를 예를 들어보면 자동차는 하나만 있는 것이 아니고 A 라는 사람도 같은 브랜드의 자동차가 있을 수 있고B 도 같은 브랜드의 자동차를 가질 수 있습니다 일반적으로 자동차 는 엔지니어가 설계해서OO 자동차 설계도 를 만들고 설계도에 맞게 각각 자동차가 만들어 지게 됩니다객체 지향 프로그램도 객체들이 동일한 방법으로 생성됩니다즉 설계도에 의하여 객체들이 생성되고 객체에 대한 설계도를 바로 클래스(Class) 라고 말합니다클래스는 특정..." }, { "title": "Java 04 - 클래스 , 객체 , 메소드 (2) - 객체 지향 프로그래밍의 특징", "url": "/posts/java21/", "categories": "Java", "tags": "Java", "date": "2021-03-25 09:54:00 +0900", "snippet": "캡슐화객체 지향의 특징중 캡슐화 라는 것이 있습니다 이것은 코드들을 재사용 할수 있는 방법중 하나이고다른 사람이 작성한 코드를 쓰기 위해서는 코드 자체가 잘 정리되어 있어야 할 것 입니다관련된 데이터와 알고리즘 을 하나의 묶음으로 되어있는 것을 캡슐화 라고 부릅니다 캡슐화 -------------------- (알고리즘|| 데이터 )(ㅁㅁㅁㅁ||ㅁㅁㅁㅁ)--------------------캡슐화를 사용하는데 2가지 이유가 있습니다 (1) : 서로 관련 되어 있는 데이터와 알고리즘을 묶어야 할때※ 실제로 ..." }, { "title": "Java 04 - 클래스 , 객체 , 메소드 (1) - 객체 지향 프로그래밍이란 ?", "url": "/posts/java20/", "categories": "Java", "tags": "Java", "date": "2021-03-25 09:54:00 +0900", "snippet": "클래스 , 객체 , 메소드 주요학습 내용 (1) 객체 지향 프로그래밍이란? (2) 객체 지향 프로그래밍의 특징 (3) 클래스 기초 + 객체 생성과 사용 (1) - Class (4) 메소드 기초 + 객체 생성과 사용 (2) - Method (5) 메소드 오버로딩 (6) 추상화 클래스 (7) 다형성 (8) 상속 (9) UML (10) String 클래스※ 학습목표 : 객체 지향 프로그램의 기초 개념에 대하여 학습하고 클래스의 개념 + 객체가 생성되는방법 참조변수에 대한 이해와 메소드 작성방법..." }, { "title": "블로그 에러 - (1) bundle 문제", "url": "/posts/BlogError/", "categories": "BlogError", "tags": "BlogError", "date": "2021-03-22 16:13:00 +0900", "snippet": "블로그 업데이트 에러 발생블로그 업데이트 중 서버에서 에러가 발생했다는 메시지를 보고 한참 헤매게 되었습니다나는 무엇이 문제인지 도통 감이 안잡혔고 문제된 에러는 다음과 같았습니다Run bundle exec jekyll b -d &quot;_site$BASE_URL&quot;bundler: failed to load command: jekyll (/home/runner/vendor/bundle/ruby/2.7.0/bin/jekyll)LoadError: libffi.so.6: cannot open shared object fil..." }, { "title": "Java 03 - 배열 ★ 알고리즘 도전", "url": "/posts/java201_a/", "categories": "Java", "tags": "Java", "date": "2021-03-18 16:10:00 +0900", "snippet": "본 포스팅은 백준 사이트에서 진행 할 수있는 알고리즘 문제 와 그외 다양한 문제풀이 포스팅 입니다배열 진도에 맞게 문제풀이 합니다 사용하는 언어 : java 목표 : 매주 1개 이상 알고리즘 문제 풀이 업데이트 하기 !!(1) 백준 10818번문제N개의 정수가 주어진다. 이때, 최솟값과 최댓값을 구하는 프로그램을 작성하시오.입력첫째 줄에 정수의 개수 N (1 ≤ N ≤ 1,000,000)이 주어진다.둘째 줄에는 N개의 정수를 공백으로 구분해서 주어진다.모든 정수는 -1,000,000보다 크거나 같고, 1,000,000보다 ..." }, { "title": "Java 03 - 배열 (6) ArrayList", "url": "/posts/java19/", "categories": "Java", "tags": "Java", "date": "2021-03-18 09:52:00 +0900", "snippet": "ArrayList - 동적배열기존 배열은 크기가 한번 결정되면 젇대 변경할 수 없었습니다 때문에 단점이 되기도 하는데이것을 보완해주는것이 ArrayList 클래스입니다배열의 크기를 자동으로 정해주거나 혹은 데이터를 추가하거나 줄이거나 등등 기존배열 보다 훨씬 편리합니다즉 인덱스로 내부의 객체를 관리한다는 점이 가장 큰 장점이 되며 기존 배열과는 달리ArrayList는 객체들이 추가되어 저장 용량을 초과한다면자동으로 부족한 크기만큼 용량이 늘어난다는 특징이 있습니다ArrayList 사용법ArrayList를 선언하는것은 다음과 같..." }, { "title": "Java 03 - 배열 (5) 2차원 배열", "url": "/posts/java18/", "categories": "Java", "tags": "Java", "date": "2021-03-17 02:29:00 +0900", "snippet": "2차원 배열배열은 많은 데이터들을 하나로 묶어서 처리할 때 필요한 자료구조 입니다여기서 데이터는 1차원 혹은 2차원이 될 수도 있습니다 이거는 언제까지나 경우의 수 입니다그럼 만약에 A 라는 학생의 5개 과목의 성적을 1차원 배열로 저장했고추가로 3명의 학생 성적을 저장해야 한다면?3개의 1차원 배열 보다는 2차원 배열이 편리 할수도 있습니다전체적인 구조2차원배열을 코드로 작성할땐 다음과 같이 작성합니다int [][] arr = new int [3][5][3] = 행의 개수[5] = 열의 개수★ 다차원 배열은 행열 개념 입니다..." }, { "title": "Java 03 - 배열 (4) 배열정렬", "url": "/posts/java17/", "categories": "Java", "tags": "Java", "date": "2021-03-17 00:28:00 +0900", "snippet": "배열정렬 - Arrays 클래스배열이나 혹은 리스트를 정렬하고 하려면 Arrays 클래스의 sort()를 사용하는데따로 정렬을 해야하는 알고리즘을 작성하지 않아도 되고 한번의 메소드 호출로 간편하게 할수있습니다Arrays 클래스는 배열의 복사 , 배열 요소 정렬 , 검색 같은 배열을 조작합니다예제로 통해서 바로 알아보도록 하겠습니다오름차순 정렬하기package blog_part03;import java.util.Arrays;import java.util.Scanner;public class Sort { public sta..." }, { "title": "Java 03 - 배열 (3) 고급 배열", "url": "/posts/java16/", "categories": "Java", "tags": "Java", "date": "2021-03-16 09:26:00 +0900", "snippet": "무명 배열자바에서는 배열의 이름을 지정하지 않고 단순히 초기값만으로 배열을 생성시킬 수 있습니다이것은 바로 무명 배열 이라고 하는데 즉시 배열을 만들어 함수의 인수로 전달 할때 사용 합니다무명 배열을 생성하는 방법은 다음과 같습니다무명배열 : new int [] {1, 2, 3, 4, ... 9}위 수식은 새로운 배열을 할당하고 중괄호 안의 초기값들로 배열을 채운만큼 크기를 정해줍니다무명 배열 은 딱 한번만 필요로 하고 혹은 참조할 일이 없는 곳에서 사용됩니다간단하게 메소드 에 무명 배열을 이용해서 크기와 값을 할당하는 예제로..." }, { "title": "Java 03 - 배열 (2) 배열 선언하고 사용하기", "url": "/posts/java15/", "categories": "Java", "tags": "Java", "date": "2021-03-12 17:06:00 +0900", "snippet": "배열 선언과 사용배열을 생성하려면 다음과 같은 2단계의 절차를 걸치게 됩니다 (1) 배열 참조 변수 생성하기 (2) 배열을 생성하고 변수에 대입하기(1) 배열 참조 변수먼저 배열 참조 변수는 다음과 같이 선언합니다int [] array int [] 는 배열 요소의 자료형이 되고 array 는 참조변수명을 뜻합니다(2) 배열 생성 후 변수에 대입하기참조 변수를 선언했다고 해서 배열이 생성된것은 아닙니다 다만 현재 변수 만 생성된 상태입니다배열 생성은 new 연산자를 사용하고 대괄호 [ ] 안의 배열 크기를 만들어 줍니다i..." }, { "title": "Java 03 - 배열 (1) 배열의 필요성", "url": "/posts/java14/", "categories": "Java", "tags": "Java", "date": "2021-03-12 10:34:00 +0900", "snippet": "배열 주요 학습내용 (1) 배열의 필요성 (2) 선언과 사용 (3) 고급 배열 (4) 배열 정렬 (5) 2차원 배열 (6) ArrayList (7) 배열을 이용한 알고리즘 도전하기 !!※ 학습목표 : 배열의 기초 개념 을 배우고 대용량의 데이터를 사용하는 프로그램의 작성을 진행합니다배열배열 (array) 은 여러 개의 변수를 하나로 묶어 넣은것을 말합니다이것이 필요한 이유에 대해 살펴보도록 하겠습니다만약에 학생이 10명이 있고 이들의 성적의 평균을 계산한다고 가정할때평균 을 계산하려면 먼저 각 학생들의 성적을 읽어..." }, { "title": "Java 02 - 선택과 반복 ★ 알고리즘 도전", "url": "/posts/java101_a/", "categories": "Java", "tags": "Java", "date": "2021-03-09 16:10:00 +0900", "snippet": "본 포스팅은 백준 사이트에서 진행 할 수있는 알고리즘 문제 + 그외 다양한 문제풀이 포스팅 입니다선택과 반복 진도에 맞게 문제풀이 합니다 사용하는 언어 : java 목표 : 매주 1개 이상 알고리즘 문제 풀이 업데이트 하기 !!(1) 두 수 비교하기 1330번문제두 정수 A와 B가 주어졌을 때, A와 B를 비교하는 프로그램을 작성하시오.입력첫째 줄에 A와 B가 주어진다. A와 B는 공백 한 칸으로 구분되어져 있다.출력첫째 줄에 다음 세 가지 중 하나를 출력한다.A가 B보다 큰 경우에는 ‘&amp;gt;’를 출력한다.A가 B..." }, { "title": "Java 02 - 선택과 반복 (6) break 와 continue", "url": "/posts/java13/", "categories": "Java", "tags": "Java", "date": "2021-03-08 16:32:00 +0900", "snippet": "break 와 continue반복문에서 제어의 흐름을 변경할 수 있는 두 가지의 방법이 있습니다 (1) break - 가장 안쪽의 반복 루프를 완전히 종료하는데 사용됩니다 (2) continue - 현재의 반복을 종료하고 다음 반복을 시작하게 만듭니다출처 : break 와 continue 차이break 와 continue 간단한 예제로 알아보기(1) breakpackage part02;public class BreakTest { public static void main ( String [] args){ ..." }, { "title": "Java 02 - 선택과 반복 (5) for 반복문", "url": "/posts/java12/", "categories": "Java", "tags": "Java", "date": "2021-03-07 20:15:00 +0900", "snippet": "for 반복문for 반복문은 정해진 횟수 만큼 반복할 때 사용하는 반복문 입니다※ for 문은 가장 많이 사용되는 반복문 입니다구조는 다음과 같습니다for (초기식 ; 조건식 ; 증감식 ++ or --){ 반복할 코드} 초기식초기식은 반복 루프를 시작하기 전에 한번만 실행됩니다 주로 변수 값을 초기화 하는 용도로 사용합니다 조건식조건식은 반복의 조건식 을 검사하는 수식 입니다 while 문도 수식의 값이 false 일경우 중단되듯이for 문도 동일하게 적용됩니다 증감식for 문이 한번 실..." }, { "title": "Java 02 - 선택과 반복 (4) while 반복문", "url": "/posts/java11/", "categories": "Java", "tags": "Java", "date": "2021-03-07 14:53:00 +0900", "snippet": "while 문반복문은 어떠한 일을 반복적으로 일을 처리하게 할수 있게 해줍니다자바에서 지원하는 반복문에는 크게 나누어 while 문과 for 문이 있습니다while 문은 어떠한 조건에 따라서 참(true) 일 경우 반복 실행 에 사용하고for 문은 정해진 횟수만큼 반복하는 경우 에 사용됩니다while 문 파악하기다음은 while문의 기본 구조를 나타냅니다while ( (1) 조건식) { (1) : 조건이 true 일경우 (2) 코드를 진행 (2) 수행하는 코드 : 조건이 false 일때까지 반복진행}간단한 예..." }, { "title": "Java 02 - 선택과 반복 (3) Switch 문", "url": "/posts/java10/", "categories": "Java", "tags": "Java", "date": "2021-03-05 16:06:00 +0900", "snippet": "(3) switch 문if - else 는 조건식이 참 혹은 거짓인지 따라서 실행할 문장이 두 가지중 하나만 결정됩니다if(조건식){ true 일 경우 처리할 코드 작성}else{ 조건식이 false 일 경우 처리할 코드 작성 }만약에 실행 문장이 여러 개인 경우가 생기면 switch 를 사용해도 좋습니다예를들어 입력 받는 값 마다 실행되는 문장들이 각 마다 있다면 어떻게 될까요?아래 이미지는 switch 구조 입니다※ switch 는 변수와 일치하는 값을 가진 case 절이 실행됩니다※ 변수 자리에는 어떠한 정수 ..." }, { "title": "Java 02 - 선택과 반복 (2) 조건문 if else", "url": "/posts/java09/", "categories": "Java", "tags": "Java", "date": "2021-03-05 10:17:00 +0900", "snippet": "(2) 조건문 if ( ) { } else { }조건문은 우리가 살아가면서 일상생활 에도 적용합니다 예를들면 다음과 같습니다만약에(if) 지금 배가고프면 밥을먹고 쉬거나 (else) 배가고프지 않으면 먹지 않고 활동을 한다는 것 처럼프로그램도 외부에서 들어오는 데이터정보에 따라서 많은 선택을 합니다if else 문은 조건에 따라 2개중에서 하나를 선택해야 하는 경우에 사용합니다다음 간단한 예제를 보면package part02;public class Example { public static void main(String ..." }, { "title": "Java 02 - 선택과 반복 (1) 제어문", "url": "/posts/java08/", "categories": "Java", "tags": "Java", "date": "2021-03-04 06:38:00 +0900", "snippet": "선택과 반복 주요 학습내용 (1) 제어문 (2) 조건문 if - else - 프로그램 작성하기 (3) switch - 월의 일수 출력하는 프로그램 (4) while - 최대공약수 찾기 + 최소값 최대값 찾기 프로그램 (5) for - 약수 계산하기 + 난수의 합 계산하기 프로그램 (6) break 그리고 continue - 숫자 추측 + 로또 확률 계산 프로그램 (7) 그외 알고리즘 문제풀이(1) 제어문제어문을 사용하게 되면 조건에 의하여 문장들의 실행 순서를 변경하기도 하고반복문을 사용하여 프로그램의 결과를 나타..." }, { "title": "Java 01 - 자바 프로그래밍 기초 FINAL", "url": "/posts/part1-final/", "categories": "Java", "tags": "Java", "date": "2021-03-03 20:00:00 +0900", "snippet": "원의면적 입력받고 계산하기사용자로 부터 정수값을 입력받아 원의 반지름을 계산하는 프로그램 입니다package expression;import java.util.Scanner;public class Example { public static void main (String [] args){ double radius = 0.0; // 원의 반지름 double area = 0.0; // 원의 면적 Scanner scan = new Scanner(System.in); System..." }, { "title": "Java 01 - 자바 프로그래밍 기초(7) 입력과 출력", "url": "/posts/java07/", "categories": "Java", "tags": "Java", "date": "2021-03-03 16:45:00 +0900", "snippet": "프로그래밍 기초 주요 학습내용 (1) Hello 에제분석 (2) 기초 개념 - 순차적인 프로그램 작성 (3) 변수와 자료형 + 프로그램 작성 (4) 수식과 연산자 (5) 형변환 (6) 문자열 (7) 입력과 출력(7) 입력과 출력변수와 자료형 포스팅 내용중 마일을 킬로미터로 변환하는 프로그램을 작성할때코드중 import java.util.Scanner; 를 사용했었습니다 이 문장의 의미는자바 클래스 라이브러리 라고 부르고 패키지 단위로 그룹핑 되어있다고 보시면 됩니다라이브러리를 사용하려면 첫번째로 import 키워드..." }, { "title": "Java 01 - 자바 프로그래밍 기초(6) 문자열", "url": "/posts/java06/", "categories": "Java", "tags": "Java", "date": "2021-03-03 09:30:00 +0900", "snippet": "프로그래밍 기초 주요 학습내용 (1) Hello 에제분석 (2) 기초 개념 - 순차적인 프로그램 작성 (3) 변수와 자료형 + 프로그램 작성 (4) 수식과 연산자 (5) 형변환 (6) 문자열 (7) 입력과 출력(6) 문자열문자열은 어떠한 문자들의 모임을 말합니다 예를 들어 문자열 “Hello”는H.e.l.l.o 5개의 유니코드 문자로 구성되어 있는데 자바에서는 내장된 문자열 자료형이 없어서이를 대신 할수있는 String 클래스가 제공되어 있습니다※ String 클래스는 문자열을 나타내는 자료형 입니다package ..." }, { "title": "Java 01 - 자바 프로그래밍 기초(5) 형변환", "url": "/posts/java05/", "categories": "Java", "tags": "Java", "date": "2021-03-03 08:35:00 +0900", "snippet": "프로그래밍 기초 주요 학습내용 (1) Hello 에제분석 (2) 기초 개념 - 순차적인 프로그램 작성 (3) 변수와 자료형 + 프로그램 작성 (4) 수식과 연산자 (5) 형변환 (6) 문자열 (7) 입력과 출력(5) 형변환하나의 자료형을 다른 자료형으로 변환하는것이 가끔은 필요할때가 있는데 이것을 형변환 이라고 부릅니다자동적인 형변환컴퓨터에서는 산술적인 연산을 하기 전에 피연산자의 타입을 통일합니다 예를들어정수계산 하드웨어 와 실수계산 하드웨어는 완전히 다르기 때문에피연산자의 타입은 다음과 같은 알고리즘에 의하여 ..." }, { "title": "Java 01 - 자바 프로그래밍 기초(4) 수식과 연산자", "url": "/posts/java04/", "categories": "Java", "tags": "Java", "date": "2021-03-02 09:41:00 +0900", "snippet": "프로그래밍 기초 주요 학습내용 (1) Hello 에제분석 (2) 기초 개념 - 순차적인 프로그램 작성 (3) 변수와 자료형 + 프로그램 작성 (4) 수식과 연산자 (5) 형변환 (6) 문자열 (7) 입력과 출력(4) 수식과 연산자프로그램에서 무언가를 계산을 하기 위해선 일상에서 사용하는 수학같은 형태의 수식을 사용합니다예를들어 x + y 와 같이 + 연산자로 구성된 식을 수식 이라고 부릅니다x = 10;y = 20;result = x + y; // 10 + 20 .. 변수 x의 값과 y의 값을 더해서 result에..." }, { "title": "Java 01 - 자바 프로그래밍 기초(3) 변수와 자료형 내용추가", "url": "/posts/java03-example/", "categories": "Java", "tags": "Java", "date": "2021-03-02 09:30:00 +0900", "snippet": "변수변수는 프로그램에서 특정 타입의 데이터를 변수에 담아서 사용합니다새로장만한 텀블러가 있다고 하면 이 안에 커피 혹은 차 가 있을수도 있고 그외 다른 음료가 있을수도 있습니다언제든지 음료종류 가 변경될 수 있는것이 변수 입니다변수의 이름은 다음과 같이 정의할 수 있습니다int coffee;int coffee, water;선언시 콤마 ``,``로 분리하여 여러개를 선언하는 것도 가능합니다위에는 변수 선언이 되었지만 아무 값도 넣지 않은 상태인데 이것을 우리는 초기화 되지 않은 변수라고 말하고반대로 변수에 최초로 값을 할당하게 ..." }, { "title": "Java 01 - 자바 프로그래밍 기초(3) 변수와 자료형", "url": "/posts/java03/", "categories": "Java", "tags": "Java", "date": "2021-02-26 02:54:00 +0900", "snippet": "프로그래밍 기초 주요 학습내용 (1) Hello 에제분석 (2) 기초 개념 - 순차적인 프로그램 작성 (3) 변수와 자료형 + 프로그램 작성 (4) 수식과 연산자 (5) 형변환 (6) 문자열 (7) 입력과 출력(3) 변수와 자료형변수(variable) 는 데이터가 저장되는 것을 의미하며 이것을 박스에 담아두는 개념이고이것은 최종적으로 컴퓨터의 메모리에 저장합니다※ 예를들어 주문한 택배 물건이 박스에 고스란히 담겨져 집 앞에 놓여져 있을때물건 = &quot;과자&quot;박스 = 물건물건 = 집변수가 필요한 상황은 ..." }, { "title": "Java 01 - 자바 프로그래밍 기초(2) 기초개념", "url": "/posts/java02/", "categories": "Java", "tags": "Java", "date": "2021-02-26 02:09:00 +0900", "snippet": "프로그래밍 기초 주요 학습내용 (1) Hello 에제분석 (2) 기초 개념 - 순차적인 프로그램 작성 (3) 변수와 자료형 + 프로그램 작성 (4) 수식과 연산자 (5) 형변환 (6) 문자열 (7) 입력과 출력(2) 기초 개념클래스프로그래밍에서 말하는 클래스(class)는 건물을 지을때 설계도면이 필요하듯이도면에는 Object 를 생성하는 중요한 존재 입니다자바 프로그램에는 적어도 하나의 클래스는 반드시 필요합니다작성할땐 키워드 + class + 파일이름 으로 쉽게 작성할수 있습니다public class Hello..." }, { "title": "Java 01 - 자바 프로그래밍 기초(1) Hello World", "url": "/posts/java01/", "categories": "Java", "tags": "Java", "date": "2021-02-26 01:50:00 +0900", "snippet": "프로그래밍 기초 주요 학습내용 (1) Hello 에제분석 (2) 기초 개념 - 순차적인 프로그램 작성 (3) 변수와 자료형 + 프로그램 작성 (4) 수식과 연산자 (5) 형변환 (6) 문자열 (7) 입력과 출력(1) Hello 예제분석 - 첫 번째 프로그램 Hello Worldpublic class Hello { public static void main(String[] args){ System.out.println(&quot;Hello World&quot;); }}위 코드의 문장들을 간단하..." }, { "title": "Spring 입문서 [기본편 03]", "url": "/posts/spring_study03/", "categories": "Spring, ", "tags": "Spring", "date": "2021-02-24 10:16:00 +0900", "snippet": "[첫번째 View 화면 만들기 + View 환경설정]주요 학습내용 프로젝트 생성하기[ ● ] 라이브러리 살펴보기[ ● ] View 환경설정 빌드하고 실행하기Part03 : View 환경설정템플릿 동작 + 정적파일 동작하는법" }, { "title": "Spring 입문서 [기본편 02]", "url": "/posts/spring_study02/", "categories": "Spring, ", "tags": "Spring", "date": "2021-02-22 17:40:00 +0900", "snippet": "[라이브러리 살펴보기]주요 학습내용 프로젝트 생성하기[ ● ] 라이브러리 살펴보기 View 환경설정 빌드하고 실행하기Part 02 : 라이브러리지난 포스팅에는 프로젝트 생성과 함께 추가한 라이브러리 가 있었습니다dependencies { implementation &#39;org.springframework.boot:spring-boot-starter-thymeleaf&#39; HTML 엔진 라이브러리 implementation &#39;org.springframework.boot:spring-boot-starter-..." }, { "title": "Spring 입문서 [기본편 01]", "url": "/posts/spring_study01/", "categories": "Spring, ", "tags": "Spring", "date": "2021-02-22 16:40:00 +0900", "snippet": "[프로젝트 환경설정]주요 학습내용 프로젝트 생성하기 라이브러리 살펴보기 View 환경설정 빌드하고 실행하기Part 01 : 준비 Java 11 설치하기Java 11 Downloads※ 오라클 계정이 있어야 다운로드를 가능해서 계정 만들고 설치를 진행합니다 IDE : Intellij 혹은 Eclipse 설치하기 Downloads 1: Intellij DownloadsDownloads 2: EclipseIntellij 설치완료. ★※ 자신의 운영체재에 적절하게 설치하기Part 01-2 : 프로젝트 생..." }, { "title": "Django로 게시판 만들기 - 04 ( Django 개발 흐름 )", "url": "/posts/python_django5/", "categories": "Python, Django", "tags": "Django", "date": "2021-02-19 17:05:00 +0900", "snippet": "본 포스팅 은 앞으로 의 개발 과정 을 진행하기전에 흐름을 정리 해볼 것 입니다Step 1 개발 흐름 정리하기 (1) Local Server 에 해당 페이지 요청 Local Server http://localhost:8000/pybo/ ---------------------------------------------------------[ My Web ] ---------&amp;gt; | [config/urls.p..." }, { "title": "Django로 게시판 만들기 - 03 ( Django - URL or View )", "url": "/posts/python_django4/", "categories": "Python, Django", "tags": "Django", "date": "2021-02-19 09:36:00 +0900", "snippet": "본 포스팅은 Django 에서 화면간의 URL을 어떻게 처리하고 프로그램을 호출하는지 알아보는것 입니다지난시간엔 프로젝트를 생성해봤고 이번에는 프로젝트 안에 앱을 생성하여 본격적으로프로그램을 만들어 보도록 합시다앱 생성하기명령 프롬포트에서 django-admin 의 startapp 명령을 이용하여 앱을 생성할 수 있습니다.PS C:\\first_projects\\board_app&amp;gt; django-admin startapp app_name생성된 앱은 현재 프로젝트 디렉토리 목록을 살펴보면 앱이 추가된것을 확인할 수 있습니..." }, { "title": "Django로 게시판 만들기 - 02 ( 프로젝트 생성 )", "url": "/posts/python_django3/", "categories": "Python, Django", "tags": "Django", "date": "2021-02-18 10:40:00 +0900", "snippet": "본 포스팅은 프로젝트 생성하는법을 알아봅니다Django 프로젝트 만들기지난 포스팅에는 개발환경을 설치해보았고 이번에는 본격적으로 프로젝트를 생성해보겠습니다진행하기전 프로젝트 루트 디렉토리를 만들어줍시다C:\\Users\\user&amp;gt;cd \\C:\\&amp;gt;mkdir my_projectsC:\\&amp;gt;cd my_projectsC:\\my_projects&amp;gt; ▲ 프로젝트 루트 디렉터리 생성하는법▼ 프로젝트 루트 디렉터리 안에서 가상 환경에 진입하는법C:\\first_projects&amp;gt;C:\\myDja..." }, { "title": "Django로 게시판 만들기 - 01 ( 개발환경 준비하기 )", "url": "/posts/python_django2/", "categories": "Python, Django", "tags": "Django", "date": "2021-02-18 08:56:00 +0900", "snippet": "본 포스팅은 Python + Django 개발환경을 준비해보는것이 주 목적 입니다Django는 Python 으로 만들어진 웹 프레임워크 이기 때문에 Python 설치는 필수로 해줘야 합니다Python 설치하기Python Downloads자신의 개발환경에 맞게 적절하게 설치를 진행합니다설치 작업을 하기 전에 Add Python version to Path 옵션을 선택하여 Path 설정을 해줍니다※ Path 설정은 Python이 설치된 경로를 컴퓨터가 인식할수 있도록 알려주는것 입니다설치가 완료 되었다면 cmd로 확인해볼까요? ..." }, { "title": "Django로 게시판 만들기 - 00 ( Hello Django !! )", "url": "/posts/python_django/", "categories": "Python, Django", "tags": "Django", "date": "2021-02-18 08:09:00 +0900", "snippet": "게시판 만들기 포스팅은 점프 투 장고 학습내용의 바탕으로 진행합니다(준비물 : Visual Studio Code 혹은 Pycham 개발 편집기)시작하기에 앞서 Django를 짧게 소개해보는 포스팅 입니다.DjangoPython으로 만들어진 웹 프레임워크 중 하나는 Django입니다 이것은 웹 프로그램을 쉽고 빠르게 만들어 주는 웹 프레임워크 입니다그렇다면 웹 프레임 워크는 무엇을 의미하는것 일까요?예를 들어 쿠키나 세션을 처리해야할때 혹은 로그인 로그아웃 처리 어떠한 권한처리 데이터베이스 처리 등웹 프로그램을 위해 만들어야 ..." }, { "title": "Getting Started", "url": "/posts/getting-started/", "categories": "Blogging, Tutorial", "tags": "getting started", "date": "2019-08-09 21:55:00 +0900", "snippet": "PrerequisitesFollow the Jekyll Docs to complete the installation of Ruby, RubyGems, Jekyll and Bundler.InstallationThere are two ways to get the theme: Install from RubyGems - Easy to update, isolate irrelevant project files so you can focus on writing. Fork on GitHub - Convenient for custom de..." } ]
